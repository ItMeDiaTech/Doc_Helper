name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install WiX Toolset v3.14
        run: |
          # Download and install WiX Toolset 3.14
          Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314.exe" -OutFile "wix314.exe"
          Start-Process -FilePath "wix314.exe" -ArgumentList "/S" -Wait
          # Add WiX to PATH
          $env:PATH += ";C:\Program Files (x86)\WiX Toolset v3.14\bin"
          echo "C:\Program Files (x86)\WiX Toolset v3.14\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Extract Version from Tag
        id: get_version
        run: |
          if ($env:GITHUB_REF -match 'refs/tags/v(.+)') {
            $version = $matches[1]
          } else {
            $version = "2.0.0"
          }
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "::set-output name=version::$version"
        shell: powershell

      - name: Restore dependencies
        run: dotnet restore Doc_Helper.sln

      - name: Build Application
        run: dotnet build Doc_Helper.sln --configuration Release --no-restore /p:Version=${{ steps.get_version.outputs.version }}

      - name: Publish Application
        run: dotnet publish DocHelper/DocHelper.csproj --configuration Release --output ./publish --no-build --self-contained true --runtime win-x64

      - name: Create Installer Assets
        run: |
          # Create placeholder icon if it doesn't exist
          if (!(Test-Path "installer/Assets/DocHelper.ico")) {
            New-Item -ItemType Directory -Force -Path "installer/Assets"
            # Copy exe as ico placeholder (WiX will extract icon from exe)
            Copy-Item "publish/DocHelper.exe" "installer/Assets/DocHelper.ico" -ErrorAction SilentlyContinue
          }

          # Create placeholder banner images
          if (!(Test-Path "installer/Assets/Banner.bmp")) {
            # Create a simple 493x58 banner bitmap
            Add-Type -AssemblyName System.Drawing
            $bitmap = New-Object System.Drawing.Bitmap(493, 58)
            $graphics = [System.Drawing.Graphics]::FromImage($bitmap)
            $graphics.Clear([System.Drawing.Color]::White)
            $font = New-Object System.Drawing.Font("Arial", 20, [System.Drawing.FontStyle]::Bold)
            $brush = New-Object System.Drawing.SolidBrush([System.Drawing.Color]::Black)
            $graphics.DrawString("Doc Helper", $font, $brush, 10, 10)
            $bitmap.Save("installer/Assets/Banner.bmp", [System.Drawing.Imaging.ImageFormat]::Bmp)
            $graphics.Dispose()
            $bitmap.Dispose()
          }

          if (!(Test-Path "installer/Assets/Dialog.bmp")) {
            # Create a simple 493x312 dialog bitmap
            Add-Type -AssemblyName System.Drawing
            $bitmap = New-Object System.Drawing.Bitmap(493, 312)
            $graphics = [System.Drawing.Graphics]::FromImage($bitmap)
            $graphics.Clear([System.Drawing.Color]::White)
            $font = New-Object System.Drawing.Font("Arial", 24, [System.Drawing.FontStyle]::Bold)
            $brush = New-Object System.Drawing.SolidBrush([System.Drawing.Color]::FromArgb(0, 120, 215))
            $graphics.DrawString("Doc Helper", $font, $brush, 150, 100)
            $font2 = New-Object System.Drawing.Font("Arial", 14)
            $brush2 = New-Object System.Drawing.SolidBrush([System.Drawing.Color]::DarkGray)
            $graphics.DrawString("Professional Document Processing", $font2, $brush2, 100, 150)
            $bitmap.Save("installer/Assets/Dialog.bmp", [System.Drawing.Imaging.ImageFormat]::Bmp)
            $graphics.Dispose()
            $bitmap.Dispose()
          }
        shell: powershell

      - name: Build MSI Installer
        run: |
          cd installer
          # Use the improved WiX v3 installer
          candle.exe DocHelper-Improved.wxs -ext WixUIExtension
          light.exe -out DocHelper-Setup.msi DocHelper-Improved.wixobj -ext WixUIExtension
          cd ..
          Copy-Item "installer/DocHelper-Setup.msi" "DocHelper-Setup-${{ steps.get_version.outputs.version }}.msi"
        shell: powershell

      - name: Create Portable ZIP
        run: |
          Compress-Archive -Path ./publish/* -DestinationPath DocHelper-Portable-${{ steps.get_version.outputs.version }}.zip
        shell: powershell

      - name: Generate Checksums
        run: |
          $msiHash = (Get-FileHash -Path "DocHelper-Setup-${{ steps.get_version.outputs.version }}.msi" -Algorithm SHA256).Hash
          $zipHash = (Get-FileHash -Path "DocHelper-Portable-${{ steps.get_version.outputs.version }}.zip" -Algorithm SHA256).Hash

          @"
          ## File Checksums (SHA256)

          | File | SHA256 |
          |------|--------|
          | DocHelper-Setup-${{ steps.get_version.outputs.version }}.msi | ``$msiHash`` |
          | DocHelper-Portable-${{ steps.get_version.outputs.version }}.zip | ``$zipHash`` |
          "@ | Out-File -FilePath checksums.md -Encoding utf8
        shell: powershell

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            DocHelper-Setup-${{ steps.get_version.outputs.version }}.msi
            DocHelper-Portable-${{ steps.get_version.outputs.version }}.zip
            checksums.md
          body: |
            ## Doc Helper Release ${{ github.ref_name }}

            ### üöÄ What's New
            This release uses the modernized WiX v4 installer with improved component management and better upgrade support.

            ### üì¶ Download Options

            #### **DocHelper-Setup-${{ steps.get_version.outputs.version }}.msi** - Windows Installer (Recommended)
            - ‚úÖ Installs to `%LocalAppData%\DiaTech\DocHelper` (no admin rights required)
            - ‚úÖ Creates desktop and start menu shortcuts
            - ‚úÖ Automatic launch option after installation
            - ‚úÖ Built-in auto-update support via Velopack
            - ‚úÖ Clean uninstall with registry cleanup
            - ‚úÖ Upgrade-friendly with proper version management

            #### **DocHelper-Portable-${{ steps.get_version.outputs.version }}.zip** - Portable Version
            - üìÅ Extract and run - no installation needed
            - üîß Perfect for USB drives or restricted environments
            - ‚ö° Same features as installed version

            ### ‚ú® Features
            - üìÑ Document processing with hyperlink extraction
            - üìë Support for Word documents (.docx) and text files (.txt)
            - üîç Automatic Document_ID and Content_ID parsing
            - ‚öôÔ∏è Settings management for API configuration
            - üèóÔ∏è Full MVVM architecture with Prism framework
            - üîÑ Built-in auto-update functionality with Velopack

            ### üõ†Ô∏è Technical Improvements
            - **WiX v4 Installer**: Modern installer with better component management
            - **Explicit Component Definitions**: No more heat.exe harvesting issues
            - **Proper GUID Management**: Stable component tracking for upgrades
            - **LocalAppData Installation**: Better than AppData for per-user installs
            - **Registry Organization**: Structured configuration in HKCU
            - **Version Management**: Dynamic versioning from Git tags

            ### üìã System Requirements
            - Windows 10/11 (64-bit)
            - .NET 9 Runtime (included in packages)
            - ~100 MB free disk space

            ### üîß Installation Instructions

            **MSI Installer (Recommended):**
            1. Download `DocHelper-Setup-${{ steps.get_version.outputs.version }}.msi`
            2. Double-click to run the installer
            3. Follow the installation wizard (no admin rights needed)
            4. Optionally launch Doc Helper after installation

            **Portable Version:**
            1. Download `DocHelper-Portable-${{ steps.get_version.outputs.version }}.zip`
            2. Extract to your desired location
            3. Run `DocHelper.exe` from the extracted folder

            ### üîÑ Auto-Updates
            The application includes Velopack-powered auto-update functionality that will notify you of new versions and help you update seamlessly.

            ### üîí Security
            All files are built from source in GitHub Actions. Check the checksums.md file for SHA256 hashes to verify file integrity.

            ### üìù Changelog
            View the full changelog at: https://github.com/DiaTech/DocHelper/commits/main

            ---
            *Built with ‚ù§Ô∏è by DiaTech*
          draft: false
          prerelease: false
